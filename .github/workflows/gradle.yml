# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build test javadocJar
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: arduino-simple-rpc/build/libs
      #After decoding the secret key, place the file in ~ /. Gradle/ secring.gpg
      - name: Decode
        run: |
          echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ${RUNNER_TEMP}/secring.gpg.b64
          base64 -d ${RUNNER_TEMP}/secring.gpg.b64 > ${RUNNER_TEMP}/secring.kbx
      #Publish project
      - name: Publish
        run: |
            if ${{ github.ref == 'refs/heads/master' }}; then
              ./gradlew publish -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password="${{secrets.SIGNING_PASSWORD}}" -Psigning.secretKeyRingFile="${RUNNER_TEMP}/secring.kbx"
            fi
        shell: bash
        env:
          MAVEN_USERNAME: ${{secrets.OSSRH_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.OSSRH_TOKEN}}